AC_PREREQ(2.52)
AC_INIT(gnome-system-tools, 2.17.3, http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-system-tools)
AC_CONFIG_SRCDIR(src/common/gst-tool.c)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

IT_PROG_INTLTOOL([0.35.0])

AM_CONFIG_HEADER(config.h)

GNOME_DOC_INIT

AM_MAINTAINER_MODE

dnl Checking the above
AC_CONFIG_SRCDIR(src/common/gst-tool.c)

AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl glib-genmarshal
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

LIBOOBS_REQUIRED=0.5.0
GTK_REQUIRED=2.9.0
LIBGLADE_REQUIRED=2.4.0
LIBGNOMEUI_REQUIRED=2.9.0
GCONF_REQUIRED=2.2.0
DBUS_REQUIRED=0.32


dnl =====================================================
dnl Cracklib checking
dnl =====================================================

dnl AC_CHECK_LIB(crack, FascistCheck, ,[
dnl   AC_MSG_WARN()
dnl   AC_MSG_WARN(---------- Building without cracklib is not recommended. ----------)
dnl   AC_MSG_WARN()
dnl   AC_MSG_WARN(-- If you are looking for cracklib you can try  :)
dnl   AC_MSG_WARN(--    http://www.users.dircon.co.uk/~crypto/)
dnl   AC_MSG_WARN(--    or :)
dnl   AC_MSG_WARN(--    http://www.rpmfind.net/linux/rpm2html/search.php?query=cracklib)
dnl   AC_MSG_WARN(--    or :)
dnl   AC_MSG_WARN(--    apt-get install cracklib2-dev)
dnl   AC_MSG_WARN()])
dnl if test x"$HAVE_LIBCRACK" = xyes ; then
dnl   AC_CHECK_HEADER(crack.h, ,[
dnl   AC_MSG_ERROR(cracklib crack.h header file not found.)])
dnl fi

dnl GST_CRACK_LIB_LOCATION="/usr/lib/"
dnl AC_ARG_WITH(cracklib-dict,
dnl [  --with-cracklib-dict[=DIR]       specify a cracklib dir ],[
dnl   if test "$withval" != "no"; then
dnl     GST_CRACK_LIB_LOCATION=$withval
dnl   fi
dnl ])
dnl AC_SUBST(GST_CRACK_LIB_LOCATION)
dnl GST_CRACK_LIB_CFLAGS="-DGST_CRACK_LIB_DICT_PATH=\"\\\"\$(GST_CRACK_LIB_LOCATION)\\\"\""
dnl AC_SUBST(GST_CRACK_LIB_CFLAGS)

dnl =====================================================
dnl END: Cracklib checking
dnl =====================================================

dnl =====================================================
dnl Check for GNOME
dnl =====================================================

AC_ARG_ENABLE(gnome,
	      	[  --enable-gnome        Enable GNOME libraries (default yes)],
              	enable_gnome="$enableval",
		enable_gnome=yes)

dnl =====================================================
dnl END: Check for GNOME
dnl =====================================================

dnl =====================================================
dnl Check for Module versions
dnl =====================================================

PKG_CHECK_MODULES(GST_DEPENDS,[
			   gtk+-2.0 >= $GTK_REQUIRED
			   libglade-2.0 >= $LIBGLADE_REQUIRED
			   gconf-2.0 >= $GCONF_REQUIRED
			   liboobs-1 >= $LIBOOBS_REQUIRED
			   libart-2.0
			   ])


if test "xyes" = "x$enable_gnome"; then
	PKG_CHECK_MODULES(GNOME,[
			   libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
			   ])
	AC_DEFINE([ENABLE_GNOME], [1], [Enable GNOME support.])
fi

AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

AM_CONDITIONAL(ENABLE_GNOME, test x$enable_gnome = xyes)

PKG_CHECK_MODULES(DBUS,[
		  dbus-1 >= $DBUS_REQUIRED
		  ])

DBUS_CFLAGS="$DBUS_CFLAGS -DDBUS_API_SUBJECT_TO_CHANGE"
AC_SUBST(DBUS_LIBS)
AC_SUBST(DBUS_CFLAGS)

dnl =====================================================
dnl END: Check for Module versions
dnl =====================================================

dnl =====================================================
dnl Check for GST Modules to build
dnl =====================================================


AC_ARG_ENABLE(network,
	      [  --enable-network        Enable build network module (default yes)], , 
	      enable_network=yes)
AC_ARG_ENABLE(services,
	      [  --enable-services       Enable build services module (default yes)], , 
	      enable_services=yes)
AC_ARG_ENABLE(time,
	      [  --enable-time           Enable build time module (default yes)], , 
	      enable_time=yes)
AC_ARG_ENABLE(users,
	      [  --enable-users          Enable build users module (default yes)], , 
	      enable_users=yes)
AC_ARG_ENABLE(shares,
	      [  --enable-shares         Enable build shares module (default yes)], , 
	      enable_shares=yes)

AM_CONDITIONAL(BUILD_NETWORK, test x$enable_network = xyes)
AM_CONDITIONAL(BUILD_SERVICES, test x$enable_services = xyes)
AM_CONDITIONAL(BUILD_TIME, test x$enable_time = xyes)
AM_CONDITIONAL(BUILD_USERS, test x$enable_users = xyes)
AM_CONDITIONAL(BUILD_SHARES, test x$enable_shares = xyes)

dnl =====================================================
dnl END: Check for GST Modules to build
dnl =====================================================

dnl ========================================================
dnl Translations
dnl ========================================================

GETTEXT_PACKAGE=gnome-system-tools
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [gettext package name])
AM_GLIB_GNU_GETTEXT

# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

dnl ========================================================
dnl END : Translations
dnl ========================================================

dnl ========================================================
dnl Set dirs
dnl ========================================================

if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/interfaces", [path where glade files will be installed])
  interfacesdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/interfaces"
  AC_DEFINE_UNQUOTED(FRONTEND_DIR,"${ac_default_prefix}/${BINDIRNAME}", [frontend files path])
  AC_DEFINE_UNQUOTED(DESKTOP_DATA_DIR,"${ac_default_prefix}/${DATADIRNAME}/control-center-2.0/capplets", [capplets directory])
else
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/interfaces", [path where glade files will be installed])
  interfacesdir="${prefix}/${DATADIRNAME}/${PACKAGE}/interfaces"
  AC_DEFINE_UNQUOTED(FRONTEND_DIR,"${prefix}/${BINDIRNAME}", [frontend files path])
  AC_DEFINE_UNQUOTED(DESKTOP_DATA_DIR,"${prefix}/${DATADIRNAME}/control-center-2.0/capplets", [capplets directory])
fi

AC_SUBST(pixmapsdir)
AC_SUBST(interfacesdir)

dnl ==============================================================
dnl END: Set dirs
dnl ==============================================================

dnl =====================================================
dnl GCONF
dnl =====================================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi
     
AM_GCONF_SOURCE_2

dnl =====================================================
dnl END: GCONF
dnl =====================================================
    
dnl =====================================================
dnl GST_LIBS & GST_CFLAGS 
dnl =====================================================

dnl GST_DEPRECATED_FLAGS="-DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED"
GST_DEPRECATED_FLAGS=""

GST_LIBS="$GST_DEPENDS_LIBS $GNOME_LIBS"
GST_CFLAGS="$GST_DEPENDS_CFLAGS $GST_CRACK_LIB_CFLAGS $GST_DEPRECATED_FLAGS $GNOME_CFLAGS"

GST_TOOL_LIBS="\$(top_builddir)/src/common/libsetuptool.a $GST_LIBS"
GST_TOOL_CFLAGS="$GST_CFLAGS -I\$(top_srcdir)/src/common"

GST_TOOL_CLEANFILES="\$(desktop) \$(desktop).in"
GST_TOOL_EXTRA_DIST="\$(toolpixmaps) \$(desktop).in.in" 
GST_TOOL_DEPENDENCIES="\$(top_builddir)/src/common/libsetuptool.a"

AC_SUBST(GST_LIBS)
AC_SUBST(GST_CFLAGS)
AC_SUBST(GST_TOOL_LIBS)
AC_SUBST(GST_TOOL_CFLAGS)
AC_SUBST(GST_TOOL_CLEANFILES)
AC_SUBST(GST_TOOL_EXTRA_DIST)
AC_SUBST(GST_TOOL_DEPENDENCIES)

dnl ==================================
dnl END: GST_LIBS & GST_FLAGS
dnl ==================================

dnl ==================================
dnl LIBIW DETECTION
dnl ==================================

GST_IW_LIBS=
AC_CHECK_HEADER(iwlib.h, [
  enable_libiw=yes
  AC_DEFINE(HAVE_LIBIW_H, "", [whether libiw is available])
  AC_HAVE_LIBRARY(iw, [GST_IW_LIBS="-liw"])
])
AM_CONDITIONAL(HAVE_LIBIW_H, test x$enable_libiw = xyes)
AC_SUBST(GST_IW_LIBS)

dnl ==================================
dnl END: LIBIW DETECTION
dnl ==================================

dnl ===========================
dnl NAUTILUS EXTENSION
dnl ===========================

PKG_CHECK_MODULES(NAUTILUS,[
	   libnautilus-extension >= 2.9.3
	   liboobs-1 >= $LIBOOBS_REQUIRED
	   ])

AC_SUBST(NAUTILUS_LIBS)
AC_SUBST(NAUTILUS_CFLAGS)

dnl ===========================
dnl END: NAUTILUS EXTENSION
dnl ===========================

AC_OUTPUT([
Makefile
doc/Makefile
doc/network/Makefile
doc/services/Makefile
doc/services/nl/Makefile
doc/shares/Makefile
doc/time/Makefile
doc/time/nl/Makefile
doc/users/Makefile
interfaces/Makefile
pixmaps/Makefile
src/Makefile
src/common/Makefile
src/users/users.desktop.in
src/users/Makefile
src/network/network.desktop.in
src/network/Makefile
src/time/time.desktop.in
src/time/Makefile
src/time/e-map/Makefile
src/services/services.desktop.in
src/services/Makefile
src/shares/shares.desktop.in
src/shares/Makefile
src/shares/nautilus/Makefile
po/Makefile.in
gnome-system-tools.pc
])

echo "

Configuration (GST):
	Services tool:     ${enable_services}
	Users tool:        ${enable_users}
	Network tool:      ${enable_network}
	Time tool:         ${enable_time}
	Shares tool:       ${enable_shares}
	GNOME support:     ${enable_gnome}

	Compiler:          ${CC} 
"
