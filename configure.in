AC_PREREQ(2.52)
AC_INIT(gnome-system-tools, 2.15.0, http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-system-tools)
AC_CONFIG_SRCDIR(src/common/gst-tool.c)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)

AC_PROG_INTLTOOL([0.29])

AM_CONFIG_HEADER(config.h)

GNOME_DOC_INIT

AM_MAINTAINER_MODE

dnl Checking the above
AC_CONFIG_SRCDIR(src/common/gst-tool.c)

AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_INSTALL
AC_PROG_MAKE_SET

dnl glib-genmarshal
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

LIBOOBS_REQUIRED=0.0.1
GTK_REQUIRED=2.6.0
LIBGLADE_REQUIRED=2.4.0
LIBGNOMEUI_REQUIRED=2.9.0
GCONF_REQUIRED=2.2.0

dnl =====================================================
dnl search for su
dnl =====================================================

AC_PATH_PROG(SU_TOOL, su)
if test x"${SU_TOOL}" = xno; then
  AC_MSG_ERROR([su executable not found in your path - should be installed])
else
  AC_DEFINE_UNQUOTED(SU_PATH, "${SU_TOOL}", [su executable path])
fi

dnl =====================================================
dnl END: search for su
dnl =====================================================

dnl =====================================================
dnl search for ssh
dnl =====================================================

AC_PATH_PROG(SSH_TOOL, ssh)
if test x"${SSH_TOOL}" = xno; then
  AC_MSG_WARN([ssh executable not found in your path - should be installed if remote administration is desired])
  AC_DEFINE_UNQUOTED(SSH_PATH, "", [ssh executable path])
else
  AC_DEFINE_UNQUOTED(SSH_PATH, "${SSH_TOOL}", [ssh executable path])
fi

dnl =====================================================
dnl END: search for ssh
dnl =====================================================

dnl =====================================================
dnl LibUtil checking
dnl =====================================================

AC_CHECK_LIB(util, forkpty, , [AC_MSG_ERROR(Libutil library ir required.)])
AC_CHECK_HEADER(pty.h, )

dnl =====================================================
dnl END: LibUtil checking
dnl =====================================================

dnl =====================================================
dnl Cracklib checking
dnl =====================================================

dnl AC_CHECK_LIB(crack, FascistCheck, ,[
dnl   AC_MSG_WARN()
dnl   AC_MSG_WARN(---------- Building without cracklib is not recommended. ----------)
dnl   AC_MSG_WARN()
dnl   AC_MSG_WARN(-- If you are looking for cracklib you can try  :)
dnl   AC_MSG_WARN(--    http://www.users.dircon.co.uk/~crypto/)
dnl   AC_MSG_WARN(--    or :)
dnl   AC_MSG_WARN(--    http://www.rpmfind.net/linux/rpm2html/search.php?query=cracklib)
dnl   AC_MSG_WARN(--    or :)
dnl   AC_MSG_WARN(--    apt-get install cracklib2-dev)
dnl   AC_MSG_WARN()])
dnl if test x"$HAVE_LIBCRACK" = xyes ; then
dnl   AC_CHECK_HEADER(crack.h, ,[
dnl   AC_MSG_ERROR(cracklib crack.h header file not found.)])
dnl fi

dnl GST_CRACK_LIB_LOCATION="/usr/lib/"
dnl AC_ARG_WITH(cracklib-dict,
dnl [  --with-cracklib-dict[=DIR]       specify a cracklib dir ],[
dnl   if test "$withval" != "no"; then
dnl     GST_CRACK_LIB_LOCATION=$withval
dnl   fi
dnl ])

AC_CHECK_LIB(crypt, crypt, ,[
   AC_MSG_ERROR(crypt library is required.)])
AC_CHECK_HEADER(crypt.h,AC_DEFINE(HAVE_CRYPT_H, "", [whether it has crypt function]))
dnl AC_SUBST(GST_CRACK_LIB_LOCATION)
dnl GST_CRACK_LIB_CFLAGS="-DGST_CRACK_LIB_DICT_PATH=\"\\\"\$(GST_CRACK_LIB_LOCATION)\\\"\""
dnl AC_SUBST(GST_CRACK_LIB_CFLAGS)

dnl =====================================================
dnl END: Cracklib checking
dnl =====================================================

dnl =====================================================
dnl Check for Module versions
dnl =====================================================

PKG_CHECK_MODULES(GST_DEPENDS,[
			   gtk+-2.0 >= $GTK_REQUIRED
			   libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
			   libglade-2.0 >= $LIBGLADE_REQUIRED
			   gconf-2.0 >= $GCONF_REQUIRED
			   liboobs-1 >= $LIBOOBS_REQUIRED
			   ])

dnl =====================================================
dnl END: Check for Module versions
dnl =====================================================

dnl =====================================================
dnl Check for GST Modules to build
dnl =====================================================


AC_ARG_ENABLE(boot, 
	      [  --enable-boot           Enable build boot module (default no)], , 
	      enable_boot=no)
AC_ARG_ENABLE(network,
	      [  --enable-network        Enable build network module (default yes)], , 
	      enable_network=yes)
AC_ARG_ENABLE(services,
	      [  --enable-services       Enable build services module (default yes)], , 
	      enable_services=yes)
AC_ARG_ENABLE(time,
	      [  --enable-time           Enable build time module (default yes)], , 
	      enable_time=yes)
AC_ARG_ENABLE(users,
	      [  --enable-users          Enable build users module (default yes)], , 
	      enable_users=yes)
AC_ARG_ENABLE(disks,
	      [  --enable-disks          Enable build disks module (default no)], , 
	      enable_disks=no)
AC_ARG_ENABLE(shares,
	      [  --enable-shares         Enable build shares module (default yes)], , 
	      enable_shares=yes)

AM_CONDITIONAL(BUILD_BOOT, test x$enable_boot = xyes)
AM_CONDITIONAL(BUILD_NETWORK, test x$enable_network = xyes)
AM_CONDITIONAL(BUILD_SERVICES, test x$enable_services = xyes)
AM_CONDITIONAL(BUILD_TIME, test x$enable_time = xyes)
AM_CONDITIONAL(BUILD_USERS, test x$enable_users = xyes)
AM_CONDITIONAL(BUILD_DISKS, test x$enable_disks = xyes)
AM_CONDITIONAL(BUILD_SHARES, test x$enable_shares = xyes)

dnl =====================================================
dnl END: Check for GST Modules to build
dnl =====================================================

dnl ========================================================
dnl Translations
dnl ========================================================

ALL_LINGUAS="am ar az bg bn ca cs cy da de dz el en_CA en_GB es et eu fi fr ga gl gu he hi hr hu id it ja ka ko ku lt lv mk ml mn ms nb ne nl nn pa pl pt pt_BR ro ru rw sk sq sr sr@Latn sv ta th tr uk vi wa xh zh_CN zh_HK zh_TW"
GETTEXT_PACKAGE=gnome-system-tools
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [gettext package name])
AM_GLIB_GNU_GETTEXT

# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

dnl ========================================================
dnl END : Translations
dnl ========================================================

dnl ========================================================
dnl Set SCRIPTS_DIR & PIXMAPS_DIR 
dnl ========================================================

AM_PATH_SYSTEM_TOOLS_BACKENDS($SYSTEM_TOOLS_BACKENDS_REQUIRED)
AC_DEFINE_UNQUOTED(SCRIPTS_DIR, "$STB_SCRIPTS_DIR", [System Tools backends dir])

if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/interfaces", [path where glade files will be installed])
  interfacesdir="${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}/interfaces"
  AC_DEFINE_UNQUOTED(FRONTEND_DIR,"${ac_default_prefix}/${BINDIRNAME}", [frontend files path])
  AC_DEFINE_UNQUOTED(DESKTOP_DATA_DIR,"${ac_default_prefix}/${DATADIRNAME}/control-center-2.0/capplets", [capplets directory])
else
  AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
  pixmapsdir="${prefix}/${DATADIRNAME}/${PACKAGE}/pixmaps"
  AC_DEFINE_UNQUOTED(INTERFACES_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}/interfaces", [path where glade files will be installed])
  interfacesdir="${prefix}/${DATADIRNAME}/${PACKAGE}/interfaces"
  AC_DEFINE_UNQUOTED(FRONTEND_DIR,"${prefix}/${BINDIRNAME}", [frontend files path])
  AC_DEFINE_UNQUOTED(DESKTOP_DATA_DIR,"${prefix}/${DATADIRNAME}/control-center-2.0/capplets", [capplets directory])
fi

AC_SUBST(scriptsdir)
AC_SUBST(pixmapsdir)
AC_SUBST(interfacesdir)

dnl ==============================================================
dnl END: Set SCRIPTS_DIR & PIXMAPS_DIR 
dnl ==============================================================

dnl =====================================================
dnl GCONF
dnl =====================================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi
     
AM_GCONF_SOURCE_2

dnl =====================================================
dnl END: GCONF
dnl =====================================================
    
dnl =====================================================
dnl GST_LIBS & GST_CFLAGS 
dnl =====================================================

dnl GST_DEPRECATED_FLAGS="-DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED"
GST_DEPRECATED_FLAGS=""

GST_LIBS="$GST_DEPENDS_LIBS"
GST_CFLAGS="$GST_DEPENDS_CFLAGS $GST_CRACK_LIB_CFLAGS $GST_DEPRECATED_FLAGS"

GST_TOOL_LIBS="$GST_LIBS -lutil \$(top_builddir)/src/common/libsetuptool.a"
GST_TOOL_CFLAGS="$GST_CFLAGS -I\$(top_srcdir)/src/common"

GST_TOOL_CLEANFILES="\$(desktop) \$(desktop).in"
GST_TOOL_EXTRA_DIST="\$(toolpixmaps) \$(desktop).in.in" 
GST_TOOL_DEPENDENCIES="\$(top_builddir)/src/common/libsetuptool.a"

AC_SUBST(GST_LIBS)
AC_SUBST(GST_CFLAGS)
AC_SUBST(GST_TOOL_LIBS)
AC_SUBST(GST_TOOL_CFLAGS)
AC_SUBST(GST_TOOL_CLEANFILES)
AC_SUBST(GST_TOOL_EXTRA_DIST)
AC_SUBST(GST_TOOL_DEPENDENCIES)

dnl ==================================
dnl END: GST_LIBS & GST_FLAGS
dnl ==================================

dnl ===========================
dnl NAUTILUS EXTENSION
dnl ===========================

PKG_CHECK_MODULES(NAUTILUS,[
	   libnautilus-extension >= 2.9.3
	   ])

AC_SUBST(NAUTILUS_LIBS)
AC_SUBST(NAUTILUS_CFLAGS)

dnl ===========================
dnl END: NAUTILUS EXTENSION
dnl ===========================

AC_OUTPUT([
Makefile
doc/Makefile
doc/boot/Makefile
doc/network/Makefile
doc/services/Makefile
doc/services/nl/Makefile
doc/time/Makefile
doc/time/nl/Makefile
doc/users/Makefile
gnome-system-tools.spec
interfaces/Makefile
pixmaps/Makefile
src/Makefile
src/common/Makefile
src/users/users.desktop.in
src/users/Makefile
src/users/search-bar/Makefile
src/network/network.desktop.in
src/network/Makefile
src/time/time.desktop.in
src/time/Makefile
src/time/e-map/Makefile
src/boot/boot.desktop.in
src/boot/Makefile
src/services/services.desktop.in
src/services/Makefile
src/shares/shares.desktop.in
src/shares/Makefile
src/shares/nautilus/Makefile
src/disks/disks.desktop.in
src/disks/Makefile
po/Makefile.in
gnome-system-tools.pc
])

echo "

Configuration (GST):
	Boot tool:         ${enable_boot}
	Disks tool:        ${enable_disks}
	Services tool:     ${enable_services}
	Users tool:        ${enable_users}
	Network tool:      ${enable_network}
	Time tool:         ${enable_time}
	Shares tool:       ${enable_shares}

	Compiler:          ${CC} 
"
